type Project {
  id: ID @id
  name: String!
  description: String
  createdAt: DateTime!
    @timestamp(operations: [CREATE])
  contributors: [User!]!
    @relationship(type: "CONTRIBUTES", properties: "Contributes", direction: IN)
  tasks: [Task!]! 
    @relationship(type: "DEPENDS_ON", direction: OUT)
  role: UserRole!
    @cypher(statement: """
      MATCH (:User {id: $auth.jwt.sub})-[r:CONTRIBUTES]->(this)
      RETURN r.as AS role
    """)
}

#extend type Project @auth(
#  rules: [
#    {
#      operations: [READ, UPDATE, DELETE, CONNECT, DISCONNECT]
#      allow: {
#        role: OWNER
#      }
#    }
#    {
#      operations: [READ, CONNECT, DISCONNECT]
#      allow: {
#        OR: [
#          {
#            role: MODERATOR
#          }
#          {
#            role: CONTRIBUTOR
#          }
#        ]
#      }
#    }
#    {
#      operations: [READ]
#      allow: {
#        role: GUEST
#      }
#    }
#  ]
#)
