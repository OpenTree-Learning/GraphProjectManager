type User {
	id: ID! @id
	username: String!
	firstname: String
	lastname: String
	email: String!
	password: String!
	createdAt: DateTime
		@timestamp(operations: [CREATE])
	updatedAt: DateTime
		@timestamp(operations: [UPDATE])
	ownedProjects: [Project!]!
		@relationship(type: "OWNS", direction: OUT)
	contributedProjects: [Project!]!
		@relationship(type: "CONTRIBUTES", properties: "Contributes", direction: OUT)
	tasks: [Task!]!
		@relationship(type: "CONTRIBUTES", properties: "Contributes", direction: OUT)
}

interface Contributes @relationshipProperties {
	since: DateTime
}

type UserResponse {
 	status: String!
	data: UserResponseData
}

type UserResponseData {
	id: ID!
	username: String!
	firstname: String!
	lastname: String!
	email: String!
	createdAt: DateTime
	updatedAt: DateTime
}

type Mutation {
	createUser(
		username: String!
		firstname: String
		lastname: String
		email: String!
		password: String!
	): UserResponse
}
